<Project>
  <PropertyGroup>
    <RunDistil Condition="'$(Configuration)|$(RunDistil)' == 'Release|'">true</RunDistil>

    <!-- If set to false, only methods and classes annotated with `DistIL.Attributes.OptimizeAttribute` will be transformed. -->
    <DistilAllMethods Condition="'$(DistilAllMethods)' == ''">false</DistilAllMethods>
  </PropertyGroup>

  <!-- Specifying Inputs and Outputs will enable support for incremental builds. -->
  <Target Name="_DoRunDistil" AfterTargets="Compile" Condition="'$(RunDistil)' == 'true'"
          Inputs="@(IntermediateAssembly)" Outputs="@(IntermediateAssembly -> '%(Identity).bak')"
  >
    <RemoveDuplicates Inputs="@(ReferencePath -> '%(RootDir)%(Directory)')">
      <Output TaskParameter="Filtered" ItemName="AsmRefPaths"/>
    </RemoveDuplicates>

    <PropertyGroup>
      <CliOptimizerPath>$(MSBuildThisFileDirectory)../tools/net8.0/DistIL.Cli.dll</CliOptimizerPath>
      <InputAsmPath>%(IntermediateAssembly.FullPath)</InputAsmPath>

      <!-- Trailing slashes are removed to prevent issues with argument splitting. -->
      <JoinedAsmRefPaths>@(AsmRefPaths -> '"%(Identity)"', ' ')</JoinedAsmRefPaths>
      <ResolverPathsArg>-r $(JoinedAsmRefPaths.Replace('\"', '"')) --no-resolver-fallback</ResolverPathsArg>

      <FilterUnmarkedArg Condition="'$(DistilAllMethods)' != 'true'">--filter-unmarked</FilterUnmarkedArg>
    </PropertyGroup>

    <!-- If the CLI isn't on the NuGet tools path, try to find it from referenced assemblies.
         This allows the task to work properly when this project is referenced directly. -->
    <ResolveAssemblyReference
        Condition="!Exists('$(CliOptimizerPath)')"
        Assemblies="DistIL.Cli"
        SearchPaths="@(AsmRefPaths)"
        FindDependencies="False"
    >
      <Output TaskParameter="ResolvedFiles" PropertyName="CliOptimizerPath" />
    </ResolveAssemblyReference>

    <Exec
      WorkingDirectory="$(TargetDir)"
      Command='dotnet "$(CliOptimizerPath)" -i "$(InputAsmPath)" $(ResolverPathsArg) $(FilterUnmarkedArg) $(DistilExtraArgs)'
    />
    <Touch Files="@(IntermediateAssembly -> '%(Identity).bak')" />
  </Target>
</Project>
